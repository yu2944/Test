{"ast":null,"code":"var _jsxFileName = \"D:\\\\WebStrom\\\\WebStromData\\\\login\\\\src\\\\component\\\\table\\\\table.js\";\nimport React from \"react\";\nimport '../../scss/table.scss';\nimport Customer from '../UPload';\nimport GetTime from '../getdate';\nimport ReadText from \"../readtext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Table extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      array: [],\n      isDog: '',\n      struct: [{\n        id: Math.round(Math.random() * 10),\n        title: '数量',\n        data: Math.round(Math.random() * 100)\n      }, {\n        id: Math.round(Math.random() * 10),\n        title: '数据',\n        data: Math.round(Math.random() * 100)\n      }, {\n        id: Math.round(Math.random() * 10),\n        title: '匹配数量',\n        data: Math.round(Math.random() * 100)\n      }, {\n        id: Math.round(Math.random() * 10),\n        title: '匹配数据',\n        data: Math.round(Math.random() * 100)\n      }, {\n        id: Math.round(Math.random() * 10),\n        title: '放出数量',\n        data: Math.round(Math.random() * 100)\n      }, {\n        id: Math.round(Math.random() * 10),\n        title: '放出数据',\n        data: Math.round(Math.random() * 100)\n      }, {\n        id: Math.round(Math.random() * 10),\n        title: '入围数量',\n        data: Math.round(Math.random() * 100)\n      }, {\n        id: Math.round(Math.random() * 10),\n        title: '匹配数量',\n        data: Math.round(Math.random() * 100)\n      }, {\n        id: Math.round(Math.random() * 10),\n        title: '匹配数据',\n        data: Math.round(Math.random() * 100)\n      }, {\n        id: Math.round(Math.random() * 10),\n        title: '放出数量',\n        data: Math.round(Math.random() * 100)\n      }]\n    };\n  }\n\n  RandomNum() {\n    const arr = [];\n    const {\n      array\n    } = this.state;\n\n    for (let j = 0; j < this.state.struct.length; j++) {\n      if (array.length !== 10) {\n        for (let i = 0; i < this.state.struct.length; i++) {\n          arr.push(Math.ceil(Math.random() * this.state.struct.length)); //取1开始的整数\n        }\n      } else {\n        console.log('已经够10个数据了，不再生成数据');\n      }\n    }\n\n    console.log(arr);\n\n    for (let i = 0; i < arr.length; i++) {\n      if (array.indexOf(arr[i]) === -1) {\n        array.push(arr[i]);\n      }\n    } //冒泡排序\n\n\n    for (let j = 0; j < array.length - 1; j++) {\n      for (let i = 0; i < array.length - 1 - j; i++) {\n        // 每次排序减少一个\n        if (array[i] > array[i + 1]) {\n          let temp = array[i];\n          array[i] = array[i + 1];\n          array[i + 1] = temp;\n        }\n      }\n    }\n\n    console.log(...array);\n    return array;\n  } // tick(){\n  //     this.setState({\n  //         isDog:false\n  //     })\n  //     console.log(this.state.isDog)\n  // }\n  // componentDidMount() {\n  //     this.timer=setInterval(()=>{this.tick()},1000)\n  // }\n  // componentWillUnmount() {\n  //     if (this.state.isDog === false){\n  //         clearInterval(this.timer)\n  //     }\n  // }\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(GetTime, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ReadText, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Table;","map":{"version":3,"sources":["D:/WebStrom/WebStromData/login/src/component/table/table.js"],"names":["React","Customer","GetTime","ReadText","Table","Component","constructor","props","state","array","isDog","struct","id","Math","round","random","title","data","RandomNum","arr","j","length","i","push","ceil","console","log","indexOf","temp","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,uBAAP;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,QAAP,MAAqB,aAArB;;;AAEA,MAAMC,KAAN,SAAoBJ,KAAK,CAACK,SAA1B,CAAoC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,EADE;AAETC,MAAAA,KAAK,EAAC,EAFG;AAGTC,MAAAA,MAAM,EAAE,CACJ;AAACC,QAAAA,EAAE,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,CAAL;AAAqCC,QAAAA,KAAK,EAAE,IAA5C;AAAkDC,QAAAA,IAAI,EAAEJ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B;AAAxD,OADI,EAEJ;AAACH,QAAAA,EAAE,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,CAAL;AAAqCC,QAAAA,KAAK,EAAE,IAA5C;AAAkDC,QAAAA,IAAI,EAAEJ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B;AAAxD,OAFI,EAGJ;AAACH,QAAAA,EAAE,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,CAAL;AAAqCC,QAAAA,KAAK,EAAE,MAA5C;AAAoDC,QAAAA,IAAI,EAAEJ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B;AAA1D,OAHI,EAIJ;AAACH,QAAAA,EAAE,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,CAAL;AAAqCC,QAAAA,KAAK,EAAE,MAA5C;AAAoDC,QAAAA,IAAI,EAAEJ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B;AAA1D,OAJI,EAKJ;AAACH,QAAAA,EAAE,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,CAAL;AAAqCC,QAAAA,KAAK,EAAE,MAA5C;AAAoDC,QAAAA,IAAI,EAAEJ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B;AAA1D,OALI,EAMJ;AAACH,QAAAA,EAAE,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,CAAL;AAAqCC,QAAAA,KAAK,EAAE,MAA5C;AAAoDC,QAAAA,IAAI,EAAEJ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B;AAA1D,OANI,EAOJ;AAACH,QAAAA,EAAE,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,CAAL;AAAqCC,QAAAA,KAAK,EAAE,MAA5C;AAAoDC,QAAAA,IAAI,EAAEJ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B;AAA1D,OAPI,EAQJ;AAACH,QAAAA,EAAE,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,CAAL;AAAqCC,QAAAA,KAAK,EAAE,MAA5C;AAAoDC,QAAAA,IAAI,EAAEJ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B;AAA1D,OARI,EASJ;AAACH,QAAAA,EAAE,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,CAAL;AAAqCC,QAAAA,KAAK,EAAE,MAA5C;AAAoDC,QAAAA,IAAI,EAAEJ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B;AAA1D,OATI,EAUJ;AAACH,QAAAA,EAAE,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,CAAL;AAAqCC,QAAAA,KAAK,EAAE,MAA5C;AAAoDC,QAAAA,IAAI,EAAEJ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B;AAA1D,OAVI;AAHC,KAAb;AAgBH;;AAEDG,EAAAA,SAAS,GAAG;AACR,UAAMC,GAAG,GAAG,EAAZ;AACA,UAAM;AAACV,MAAAA;AAAD,QAAU,KAAKD,KAArB;;AACA,SAAK,IAAIY,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKZ,KAAL,CAAWG,MAAX,CAAkBU,MAAtC,EAA8CD,CAAC,EAA/C,EAAmD;AAC/C,UAAIX,KAAK,CAACY,MAAN,KAAiB,EAArB,EAAyB;AACrB,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKd,KAAL,CAAWG,MAAX,CAAkBU,MAAtC,EAA8CC,CAAC,EAA/C,EAAmD;AAC/CH,UAAAA,GAAG,CAACI,IAAJ,CAASV,IAAI,CAACW,IAAL,CAAUX,IAAI,CAACE,MAAL,KAAgB,KAAKP,KAAL,CAAWG,MAAX,CAAkBU,MAA5C,CAAT,EAD+C,CACc;AAChE;AACJ,OAJD,MAIO;AACHI,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACH;AACJ;;AACDD,IAAAA,OAAO,CAACC,GAAR,CAAYP,GAAZ;;AACA,SAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,GAAG,CAACE,MAAxB,EAAgCC,CAAC,EAAjC,EAAqC;AACjC,UAAIb,KAAK,CAACkB,OAAN,CAAcR,GAAG,CAACG,CAAD,CAAjB,MAA0B,CAAC,CAA/B,EAAkC;AAC9Bb,QAAAA,KAAK,CAACc,IAAN,CAAWJ,GAAG,CAACG,CAAD,CAAd;AACH;AACJ,KAjBO,CAkBR;;;AACA,SAAK,IAAIF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGX,KAAK,CAACY,MAAN,GAAe,CAAnC,EAAsCD,CAAC,EAAvC,EAA2C;AACvC,WAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGb,KAAK,CAACY,MAAN,GAAe,CAAf,GAAmBD,CAAvC,EAA0CE,CAAC,EAA3C,EAA+C;AAAE;AAC7C,YAAIb,KAAK,CAACa,CAAD,CAAL,GAAWb,KAAK,CAACa,CAAC,GAAG,CAAL,CAApB,EAA6B;AACzB,cAAIM,IAAI,GAAGnB,KAAK,CAACa,CAAD,CAAhB;AACAb,UAAAA,KAAK,CAACa,CAAD,CAAL,GAAWb,KAAK,CAACa,CAAC,GAAG,CAAL,CAAhB;AACAb,UAAAA,KAAK,CAACa,CAAC,GAAG,CAAL,CAAL,GAAeM,IAAf;AACH;AACJ;AACJ;;AACDH,IAAAA,OAAO,CAACC,GAAR,CAAY,GAAGjB,KAAf;AACA,WAAOA,KAAP;AACH,GAnD+B,CAqDhC;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;AAEAoB,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BAwBI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAxBJ,eA0BI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cA1BJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AA+BH;;AAtG+B;;AAyGpC,eAAezB,KAAf","sourcesContent":["import React from \"react\";\r\n\r\nimport '../../scss/table.scss'\r\nimport Customer from '../UPload'\r\nimport GetTime from '../getdate'\r\nimport ReadText from \"../readtext\";\r\n\r\nclass Table extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            array: [],\r\n            isDog:'',\r\n            struct: [\r\n                {id: Math.round(Math.random() * 10), title: '数量', data: Math.round(Math.random() * 100)},\r\n                {id: Math.round(Math.random() * 10), title: '数据', data: Math.round(Math.random() * 100)},\r\n                {id: Math.round(Math.random() * 10), title: '匹配数量', data: Math.round(Math.random() * 100)},\r\n                {id: Math.round(Math.random() * 10), title: '匹配数据', data: Math.round(Math.random() * 100)},\r\n                {id: Math.round(Math.random() * 10), title: '放出数量', data: Math.round(Math.random() * 100)},\r\n                {id: Math.round(Math.random() * 10), title: '放出数据', data: Math.round(Math.random() * 100)},\r\n                {id: Math.round(Math.random() * 10), title: '入围数量', data: Math.round(Math.random() * 100)},\r\n                {id: Math.round(Math.random() * 10), title: '匹配数量', data: Math.round(Math.random() * 100)},\r\n                {id: Math.round(Math.random() * 10), title: '匹配数据', data: Math.round(Math.random() * 100)},\r\n                {id: Math.round(Math.random() * 10), title: '放出数量', data: Math.round(Math.random() * 100)},\r\n            ]\r\n        }\r\n    }\r\n\r\n    RandomNum() {\r\n        const arr = [];\r\n        const {array} = this.state;\r\n        for (let j = 0; j < this.state.struct.length; j++) {\r\n            if (array.length !== 10) {\r\n                for (let i = 0; i < this.state.struct.length; i++) {\r\n                    arr.push(Math.ceil(Math.random() * this.state.struct.length))//取1开始的整数\r\n                }\r\n            } else {\r\n                console.log('已经够10个数据了，不再生成数据')\r\n            }\r\n        }\r\n        console.log(arr)\r\n        for (let i = 0; i < arr.length; i++) {\r\n            if (array.indexOf(arr[i]) === -1) {\r\n                array.push(arr[i])\r\n            }\r\n        }\r\n        //冒泡排序\r\n        for (let j = 0; j < array.length - 1; j++) {\r\n            for (let i = 0; i < array.length - 1 - j; i++) { // 每次排序减少一个\r\n                if (array[i] > array[i + 1]) {\r\n                    let temp = array[i];\r\n                    array[i] = array[i + 1];\r\n                    array[i + 1] = temp;\r\n                }\r\n            }\r\n        }\r\n        console.log(...array)\r\n        return array\r\n    }\r\n\r\n    // tick(){\r\n    //     this.setState({\r\n    //         isDog:false\r\n    //     })\r\n    //     console.log(this.state.isDog)\r\n    // }\r\n\r\n    // componentDidMount() {\r\n    //     this.timer=setInterval(()=>{this.tick()},1000)\r\n    // }\r\n\r\n    // componentWillUnmount() {\r\n    //     if (this.state.isDog === false){\r\n    //         clearInterval(this.timer)\r\n    //     }\r\n    // }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {/*<div className='tableStyle'>*/}\r\n                {/*    <h3>数据</h3>*/}\r\n                {/*    {this.state.struct.map((item, index) => {*/}\r\n                {/*        return (*/}\r\n                {/*            <table className='dataTable' key={index}>*/}\r\n                {/*                <thead>*/}\r\n                {/*                <tr>*/}\r\n                {/*                    <th className='_th'>{item.title}</th>*/}\r\n                {/*                </tr>*/}\r\n                {/*                <tr>*/}\r\n                {/*                    <th className='_th'>{item.id}</th>*/}\r\n                {/*                </tr>*/}\r\n                {/*                </thead>*/}\r\n                {/*                <tbody>*/}\r\n                {/*                <tr>*/}\r\n                {/*                    <td className='_td'>{item.data}</td>*/}\r\n                {/*                </tr>*/}\r\n                {/*                </tbody>*/}\r\n                {/*            </table>*/}\r\n                {/*        )*/}\r\n                {/*    })}*/}\r\n                {/*</div>*/}\r\n                {/*<button onClick={this.RandomNum.bind(this)}>点击</button>*/}\r\n                <GetTime />\r\n                {/*<Customer />*/}\r\n                <ReadText />\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Table;\r\n"]},"metadata":{},"sourceType":"module"}