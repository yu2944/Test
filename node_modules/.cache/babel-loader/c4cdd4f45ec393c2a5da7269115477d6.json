{"ast":null,"code":"var _jsxFileName = \"D:\\\\WebStrom\\\\WebStromData\\\\login_o\\\\src\\\\component\\\\table\\\\newTable.js\";\nimport React from \"react\";\nimport { Button, Input, Table } from 'antd';\nimport { Icon } from '@ant-design/compatible';\nimport { SmileOutlined } from \"@ant-design/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class NewTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: 'boolean',\n      currentDate: '',\n      table: {\n        struct: [{\n          title: '姓名',\n          dataIndex: 'name',\n          key: 'name',\n          alias: 'center'\n        }, {\n          title: '性别',\n          dataIndex: 'sex',\n          key: 'sex',\n          alias: 'center'\n        }, {\n          title: '年龄',\n          dataIndex: 'age',\n          key: 'age',\n          alias: 'center'\n        }, {\n          title: '登录状态',\n          dataIndex: 'online',\n          key: 'online',\n          alias: 'center'\n        }, {\n          title: '手机号码',\n          dataIndex: 'Num',\n          key: 'Num',\n          alias: 'center'\n        }, {\n          title: '地址',\n          dataIndex: 'address',\n          key: 'address',\n          alias: 'center'\n        }, {\n          title: '操作',\n          dataIndex: 'operation',\n          key: 'operation',\n          alias: 'center'\n        }]\n      }\n    };\n  }\n\n  getTime() {\n    let date = new Date();\n    let seperator1 = \"/\";\n    let seperator2 = \":\";\n    let month = date.getMonth() + 1;\n    let strDate = date.getDate();\n\n    if (month >= 1 && month <= 9) {\n      month = \"0\" + month;\n    }\n\n    if (strDate >= 0 && strDate <= 9) {\n      strDate = \"0\" + strDate;\n    }\n\n    let currentDate = date.getFullYear() + seperator1 + month + seperator1 + strDate + \" \" + date.getHours() + seperator2 + date.getMinutes() + seperator2 + date.getSeconds();\n    return currentDate;\n  }\n\n  render() {\n    let {\n      table\n    } = this.state; // let pagination={\n    //     total:50,\n    //     showSizeChanger:true,//是否可以改变pageSize\n    //     showQuickJumper:true//是否可以快速跳转到某页\n    // }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: this.getTime()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), this.state.table.struct.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: item.dataIndex\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"\\u8BF7\\u8F93\\u5165\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["D:/WebStrom/WebStromData/login_o/src/component/table/newTable.js"],"names":["React","Button","Input","Table","Icon","SmileOutlined","NewTable","Component","constructor","props","state","loading","currentDate","table","struct","title","dataIndex","key","alias","getTime","date","Date","seperator1","seperator2","month","getMonth","strDate","getDate","getFullYear","getHours","getMinutes","getSeconds","render","map","item","index"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {Button, Input, Table} from 'antd';\r\nimport {Icon} from '@ant-design/compatible';\r\nimport {SmileOutlined} from \"@ant-design/icons\";\r\n\r\n\r\nexport default class NewTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loading: 'boolean',\r\n            currentDate:'',\r\n            table: {\r\n                struct: [\r\n                    {title: '姓名', dataIndex: 'name', key: 'name', alias: 'center'},\r\n                    {title: '性别', dataIndex: 'sex', key: 'sex', alias: 'center'},\r\n                    {title: '年龄', dataIndex: 'age', key: 'age', alias: 'center'},\r\n                    {title: '登录状态', dataIndex: 'online', key: 'online', alias: 'center'},\r\n                    {title: '手机号码', dataIndex: 'Num', key: 'Num', alias: 'center'},\r\n                    {title: '地址', dataIndex: 'address', key: 'address', alias: 'center'},\r\n                    {title: '操作', dataIndex: 'operation', key: 'operation', alias: 'center'},\r\n                ]\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    getTime() {\r\n        let date = new Date();\r\n        let seperator1 = \"/\";\r\n        let seperator2 = \":\";\r\n        let month = date.getMonth() + 1;\r\n        let strDate = date.getDate();\r\n        if (month >= 1 && month <= 9) {\r\n            month = \"0\" + month;\r\n        }\r\n        if (strDate >= 0 && strDate <= 9) {\r\n            strDate = \"0\" + strDate;\r\n        }\r\n        let currentDate = date.getFullYear() + seperator1 + month + seperator1 + strDate\r\n            + \" \" + date.getHours() + seperator2 + date.getMinutes()\r\n            + seperator2 + date.getSeconds();\r\n        return currentDate;\r\n    }\r\n\r\n    render() {\r\n        let {table} = this.state\r\n        // let pagination={\r\n        //     total:50,\r\n        //     showSizeChanger:true,//是否可以改变pageSize\r\n        //     showQuickJumper:true//是否可以快速跳转到某页\r\n        // }\r\n        return (\r\n            <div>\r\n                <h1>{this.getTime()}</h1>\r\n                {this.state.table.struct.map((item, index) => {\r\n                    return (\r\n                        <div key={index}>\r\n                            <p>{item.title}</p>\r\n                            <p>{item.dataIndex}</p>\r\n                        </div>\r\n                    )\r\n                })}\r\n                <input placeholder='请输入'/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}