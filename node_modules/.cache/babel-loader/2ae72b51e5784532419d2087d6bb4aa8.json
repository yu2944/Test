{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _util = require('../util');\n\nvar util = _interopRequireWildcard(_util);\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n\n    newObj['default'] = obj;\n    return newObj;\n  }\n}\n\nvar ENUM = 'enum';\n/**\r\n *  Rule for validating a value exists in an enumerable list.\r\n *\r\n *  @param rule The validation rule.\r\n *  @param value The value of the field on the source object.\r\n *  @param source The source object being validated.\r\n *  @param errors An array of errors that this rule may add\r\n *  validation errors to.\r\n *  @param options The validation options.\r\n *  @param options.messages The validation messages.\r\n */\n\nfunction enumerable(rule, value, source, errors, options) {\n  rule[ENUM] = Array.isArray(rule[ENUM]) ? rule[ENUM] : [];\n\n  if (rule[ENUM].indexOf(value) === -1) {\n    errors.push(util.format(options.messages[ENUM], rule.fullField, rule[ENUM].join(', ')));\n  }\n}\n\nexports['default'] = enumerable;","map":{"version":3,"sources":["D:/Exercises/HTML/DOM/Test/node_modules/element-react/node_modules/async-validator/es/rule/enum.js"],"names":["Object","defineProperty","exports","value","_util","require","util","_interopRequireWildcard","obj","__esModule","newObj","key","prototype","hasOwnProperty","call","ENUM","enumerable","rule","source","errors","options","Array","isArray","indexOf","push","format","messages","fullField","join"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;;AAIA,IAAIC,KAAK,GAAGC,OAAO,CAAC,SAAD,CAAnB;;AAEA,IAAIC,IAAI,GAAGC,uBAAuB,CAACH,KAAD,CAAlC;;AAEA,SAASG,uBAAT,CAAiCC,GAAjC,EAAsC;AAAE,MAAIA,GAAG,IAAIA,GAAG,CAACC,UAAf,EAA2B;AAAE,WAAOD,GAAP;AAAa,GAA1C,MAAgD;AAAE,QAAIE,MAAM,GAAG,EAAb;;AAAiB,QAAIF,GAAG,IAAI,IAAX,EAAiB;AAAE,WAAK,IAAIG,GAAT,IAAgBH,GAAhB,EAAqB;AAAE,YAAIR,MAAM,CAACY,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCN,GAArC,EAA0CG,GAA1C,CAAJ,EAAoDD,MAAM,CAACC,GAAD,CAAN,GAAcH,GAAG,CAACG,GAAD,CAAjB;AAAyB;AAAE;;AAACD,IAAAA,MAAM,CAAC,SAAD,CAAN,GAAoBF,GAApB;AAAyB,WAAOE,MAAP;AAAgB;AAAE;;AAEhR,IAAIK,IAAI,GAAG,MAAX;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,UAAT,CAAoBC,IAApB,EAA0Bd,KAA1B,EAAiCe,MAAjC,EAAyCC,MAAzC,EAAiDC,OAAjD,EAA0D;AACxDH,EAAAA,IAAI,CAACF,IAAD,CAAJ,GAAaM,KAAK,CAACC,OAAN,CAAcL,IAAI,CAACF,IAAD,CAAlB,IAA4BE,IAAI,CAACF,IAAD,CAAhC,GAAyC,EAAtD;;AACA,MAAIE,IAAI,CAACF,IAAD,CAAJ,CAAWQ,OAAX,CAAmBpB,KAAnB,MAA8B,CAAC,CAAnC,EAAsC;AACpCgB,IAAAA,MAAM,CAACK,IAAP,CAAYlB,IAAI,CAACmB,MAAL,CAAYL,OAAO,CAACM,QAAR,CAAiBX,IAAjB,CAAZ,EAAoCE,IAAI,CAACU,SAAzC,EAAoDV,IAAI,CAACF,IAAD,CAAJ,CAAWa,IAAX,CAAgB,IAAhB,CAApD,CAAZ;AACD;AACF;;AAED1B,OAAO,CAAC,SAAD,CAAP,GAAqBc,UAArB","sourcesContent":["'use strict';\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\n\r\nvar _util = require('../util');\r\n\r\nvar util = _interopRequireWildcard(_util);\r\n\r\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\r\n\r\nvar ENUM = 'enum';\r\n\r\n/**\r\n *  Rule for validating a value exists in an enumerable list.\r\n *\r\n *  @param rule The validation rule.\r\n *  @param value The value of the field on the source object.\r\n *  @param source The source object being validated.\r\n *  @param errors An array of errors that this rule may add\r\n *  validation errors to.\r\n *  @param options The validation options.\r\n *  @param options.messages The validation messages.\r\n */\r\nfunction enumerable(rule, value, source, errors, options) {\r\n  rule[ENUM] = Array.isArray(rule[ENUM]) ? rule[ENUM] : [];\r\n  if (rule[ENUM].indexOf(value) === -1) {\r\n    errors.push(util.format(options.messages[ENUM], rule.fullField, rule[ENUM].join(', ')));\r\n  }\r\n}\r\n\r\nexports['default'] = enumerable;"]},"metadata":{},"sourceType":"script"}