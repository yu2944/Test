{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _rule = require('../rule/');\n\nvar _rule2 = _interopRequireDefault(_rule);\n\nvar _util = require('../util');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n/**\r\n *  Performs validation for string types.\r\n *\r\n *  @param rule The validation rule.\r\n *  @param value The value of the field on the source object.\r\n *  @param callback The callback function.\r\n *  @param source The source object being validated.\r\n *  @param options The validation options.\r\n *  @param options.messages The validation messages.\r\n */\n\n\nfunction string(rule, value, callback, source, options) {\n  var errors = [];\n  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);\n\n  if (validate) {\n    if ((0, _util.isEmptyValue)(value, 'string') && !rule.required) {\n      return callback();\n    }\n\n    _rule2['default'].required(rule, value, source, errors, options, 'string');\n\n    if (!(0, _util.isEmptyValue)(value, 'string')) {\n      _rule2['default'].type(rule, value, source, errors, options);\n\n      _rule2['default'].range(rule, value, source, errors, options);\n\n      _rule2['default'].pattern(rule, value, source, errors, options);\n\n      if (rule.whitespace === true) {\n        _rule2['default'].whitespace(rule, value, source, errors, options);\n      }\n    }\n  }\n\n  callback(errors);\n}\n\nexports['default'] = string;","map":{"version":3,"sources":["D:/Exercises/HTML/DOM/Test/node_modules/element-react/node_modules/async-validator/es/validator/string.js"],"names":["Object","defineProperty","exports","value","_rule","require","_rule2","_interopRequireDefault","_util","obj","__esModule","string","rule","callback","source","options","errors","validate","required","hasOwnProperty","field","isEmptyValue","type","range","pattern","whitespace"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;;AAIA,IAAIC,KAAK,GAAGC,OAAO,CAAC,UAAD,CAAnB;;AAEA,IAAIC,MAAM,GAAGC,sBAAsB,CAACH,KAAD,CAAnC;;AAEA,IAAII,KAAK,GAAGH,OAAO,CAAC,SAAD,CAAnB;;AAEA,SAASE,sBAAT,CAAgCE,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAE,eAAWA;AAAb,GAArC;AAA0D;AAEjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASE,MAAT,CAAgBC,IAAhB,EAAsBT,KAAtB,EAA6BU,QAA7B,EAAuCC,MAAvC,EAA+CC,OAA/C,EAAwD;AACtD,MAAIC,MAAM,GAAG,EAAb;AACA,MAAIC,QAAQ,GAAGL,IAAI,CAACM,QAAL,IAAiB,CAACN,IAAI,CAACM,QAAN,IAAkBJ,MAAM,CAACK,cAAP,CAAsBP,IAAI,CAACQ,KAA3B,CAAlD;;AACA,MAAIH,QAAJ,EAAc;AACZ,QAAI,CAAC,GAAGT,KAAK,CAACa,YAAV,EAAwBlB,KAAxB,EAA+B,QAA/B,KAA4C,CAACS,IAAI,CAACM,QAAtD,EAAgE;AAC9D,aAAOL,QAAQ,EAAf;AACD;;AACDP,IAAAA,MAAM,CAAC,SAAD,CAAN,CAAkBY,QAAlB,CAA2BN,IAA3B,EAAiCT,KAAjC,EAAwCW,MAAxC,EAAgDE,MAAhD,EAAwDD,OAAxD,EAAiE,QAAjE;;AACA,QAAI,CAAC,CAAC,GAAGP,KAAK,CAACa,YAAV,EAAwBlB,KAAxB,EAA+B,QAA/B,CAAL,EAA+C;AAC7CG,MAAAA,MAAM,CAAC,SAAD,CAAN,CAAkBgB,IAAlB,CAAuBV,IAAvB,EAA6BT,KAA7B,EAAoCW,MAApC,EAA4CE,MAA5C,EAAoDD,OAApD;;AACAT,MAAAA,MAAM,CAAC,SAAD,CAAN,CAAkBiB,KAAlB,CAAwBX,IAAxB,EAA8BT,KAA9B,EAAqCW,MAArC,EAA6CE,MAA7C,EAAqDD,OAArD;;AACAT,MAAAA,MAAM,CAAC,SAAD,CAAN,CAAkBkB,OAAlB,CAA0BZ,IAA1B,EAAgCT,KAAhC,EAAuCW,MAAvC,EAA+CE,MAA/C,EAAuDD,OAAvD;;AACA,UAAIH,IAAI,CAACa,UAAL,KAAoB,IAAxB,EAA8B;AAC5BnB,QAAAA,MAAM,CAAC,SAAD,CAAN,CAAkBmB,UAAlB,CAA6Bb,IAA7B,EAAmCT,KAAnC,EAA0CW,MAA1C,EAAkDE,MAAlD,EAA0DD,OAA1D;AACD;AACF;AACF;;AACDF,EAAAA,QAAQ,CAACG,MAAD,CAAR;AACD;;AAEDd,OAAO,CAAC,SAAD,CAAP,GAAqBS,MAArB","sourcesContent":["'use strict';\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\n\r\nvar _rule = require('../rule/');\r\n\r\nvar _rule2 = _interopRequireDefault(_rule);\r\n\r\nvar _util = require('../util');\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\r\n\r\n/**\r\n *  Performs validation for string types.\r\n *\r\n *  @param rule The validation rule.\r\n *  @param value The value of the field on the source object.\r\n *  @param callback The callback function.\r\n *  @param source The source object being validated.\r\n *  @param options The validation options.\r\n *  @param options.messages The validation messages.\r\n */\r\nfunction string(rule, value, callback, source, options) {\r\n  var errors = [];\r\n  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);\r\n  if (validate) {\r\n    if ((0, _util.isEmptyValue)(value, 'string') && !rule.required) {\r\n      return callback();\r\n    }\r\n    _rule2['default'].required(rule, value, source, errors, options, 'string');\r\n    if (!(0, _util.isEmptyValue)(value, 'string')) {\r\n      _rule2['default'].type(rule, value, source, errors, options);\r\n      _rule2['default'].range(rule, value, source, errors, options);\r\n      _rule2['default'].pattern(rule, value, source, errors, options);\r\n      if (rule.whitespace === true) {\r\n        _rule2['default'].whitespace(rule, value, source, errors, options);\r\n      }\r\n    }\r\n  }\r\n  callback(errors);\r\n}\r\n\r\nexports['default'] = string;"]},"metadata":{},"sourceType":"script"}